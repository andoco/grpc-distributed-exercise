// Code generated by protoc-gen-go. DO NOT EDIT.
// source: randstream.proto

package randstream

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Number struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Checksum             string   `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Number) Reset()         { *m = Number{} }
func (m *Number) String() string { return proto.CompactTextString(m) }
func (*Number) ProtoMessage()    {}
func (*Number) Descriptor() ([]byte, []int) {
	return fileDescriptor_e70a04e184f3d1fe, []int{0}
}

func (m *Number) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Number.Unmarshal(m, b)
}
func (m *Number) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Number.Marshal(b, m, deterministic)
}
func (m *Number) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Number.Merge(m, src)
}
func (m *Number) XXX_Size() int {
	return xxx_messageInfo_Number.Size(m)
}
func (m *Number) XXX_DiscardUnknown() {
	xxx_messageInfo_Number.DiscardUnknown(m)
}

var xxx_messageInfo_Number proto.InternalMessageInfo

func (m *Number) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Number) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

type BeginRequest struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	MaxNumbers           int32    `protobuf:"varint,2,opt,name=maxNumbers,proto3" json:"maxNumbers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeginRequest) Reset()         { *m = BeginRequest{} }
func (m *BeginRequest) String() string { return proto.CompactTextString(m) }
func (*BeginRequest) ProtoMessage()    {}
func (*BeginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e70a04e184f3d1fe, []int{1}
}

func (m *BeginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeginRequest.Unmarshal(m, b)
}
func (m *BeginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeginRequest.Marshal(b, m, deterministic)
}
func (m *BeginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeginRequest.Merge(m, src)
}
func (m *BeginRequest) XXX_Size() int {
	return xxx_messageInfo_BeginRequest.Size(m)
}
func (m *BeginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BeginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BeginRequest proto.InternalMessageInfo

func (m *BeginRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *BeginRequest) GetMaxNumbers() int32 {
	if m != nil {
		return m.MaxNumbers
	}
	return 0
}

func init() {
	proto.RegisterType((*Number)(nil), "randstream.Number")
	proto.RegisterType((*BeginRequest)(nil), "randstream.BeginRequest")
}

func init() { proto.RegisterFile("randstream.proto", fileDescriptor_e70a04e184f3d1fe) }

var fileDescriptor_e70a04e184f3d1fe = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x4a, 0xcc, 0x4b,
	0x29, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0x59, 0x71, 0xb1, 0xf9, 0x95, 0xe6, 0x26, 0xa5, 0x16, 0x09, 0x89, 0x70, 0xb1, 0x96, 0x25,
	0xe6, 0x94, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x41, 0x38, 0x42, 0x52, 0x5c, 0x1c,
	0xc9, 0x19, 0xa9, 0xc9, 0xd9, 0xc5, 0xa5, 0xb9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x70,
	0xbe, 0x92, 0x17, 0x17, 0x8f, 0x53, 0x6a, 0x7a, 0x66, 0x5e, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71,
	0x09, 0x58, 0x6d, 0x4e, 0x66, 0x6a, 0x5e, 0x89, 0x67, 0x0a, 0xd8, 0x10, 0x90, 0x5a, 0x28, 0x5f,
	0x48, 0x8e, 0x8b, 0x2b, 0x37, 0xb1, 0x02, 0x62, 0x55, 0x31, 0xd8, 0x24, 0xd6, 0x20, 0x24, 0x11,
	0x23, 0x37, 0x2e, 0x4e, 0xf7, 0xd4, 0xbc, 0xd4, 0xa2, 0xc4, 0x92, 0xfc, 0x22, 0x21, 0x4b, 0x2e,
	0x56, 0xb0, 0xc1, 0x42, 0x12, 0x7a, 0x48, 0x8e, 0x47, 0xb6, 0x4b, 0x4a, 0x08, 0x59, 0x06, 0x62,
	0x88, 0x12, 0x83, 0x01, 0x63, 0x12, 0x1b, 0xd8, 0x8b, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x69, 0x98, 0xcf, 0x4d, 0xf6, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GeneratorClient is the client API for Generator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeneratorClient interface {
	Begin(ctx context.Context, in *BeginRequest, opts ...grpc.CallOption) (Generator_BeginClient, error)
}

type generatorClient struct {
	cc *grpc.ClientConn
}

func NewGeneratorClient(cc *grpc.ClientConn) GeneratorClient {
	return &generatorClient{cc}
}

func (c *generatorClient) Begin(ctx context.Context, in *BeginRequest, opts ...grpc.CallOption) (Generator_BeginClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Generator_serviceDesc.Streams[0], "/randstream.Generator/Begin", opts...)
	if err != nil {
		return nil, err
	}
	x := &generatorBeginClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Generator_BeginClient interface {
	Recv() (*Number, error)
	grpc.ClientStream
}

type generatorBeginClient struct {
	grpc.ClientStream
}

func (x *generatorBeginClient) Recv() (*Number, error) {
	m := new(Number)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GeneratorServer is the server API for Generator service.
type GeneratorServer interface {
	Begin(*BeginRequest, Generator_BeginServer) error
}

func RegisterGeneratorServer(s *grpc.Server, srv GeneratorServer) {
	s.RegisterService(&_Generator_serviceDesc, srv)
}

func _Generator_Begin_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BeginRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GeneratorServer).Begin(m, &generatorBeginServer{stream})
}

type Generator_BeginServer interface {
	Send(*Number) error
	grpc.ServerStream
}

type generatorBeginServer struct {
	grpc.ServerStream
}

func (x *generatorBeginServer) Send(m *Number) error {
	return x.ServerStream.SendMsg(m)
}

var _Generator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "randstream.Generator",
	HandlerType: (*GeneratorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Begin",
			Handler:       _Generator_Begin_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "randstream.proto",
}
